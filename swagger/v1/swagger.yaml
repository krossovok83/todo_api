---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/login":
    post:
      summary: User LogIn
      tags:
      - Authentications
      parameters: []
      responses:
        '200':
          description: ok
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_user"
  "/api/v1/auth/logout":
    delete:
      summary: User LogOut
      tags:
      - Authentications
      security:
      - Bearer: {}
      responses:
        '200':
          description: ok
        '401':
          description: unauthorized
  "/api/v1/projects/{project_id}/tasks/{task_id}/comments":
    post:
      summary: Create Comment
      tags:
      - Comments
      security:
      - Bearer: {}
      parameters:
      - name: project_id
        in: path
        required: true
      - name: task_id
        in: path
        required: true
      responses:
        '201':
          description: created
        '422':
          description: Long Body
        '404':
          description: Not Found Task
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_comment"
  "/api/v1/projects/{project_id}/tasks/{task_id}/comments/{id}":
    delete:
      summary: Destroy Comment
      tags:
      - Comments
      security:
      - Bearer: {}
      parameters:
      - name: project_id
        in: path
        required: true
      - name: task_id
        in: path
        required: true
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: ok
        '404':
          description: Non Existing Comment
        '401':
          description: unauthorized
  "/api/v1/projects":
    get:
      summary: GET Index Projects
      tags:
      - Projects
      security:
      - Bearer: {}
      responses:
        '200':
          description: ok
        '401':
          description: unauthorized
    post:
      summary: Create Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: Long Title
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_project"
  "/api/v1/projects/{id}":
    get:
      summary: Show Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: id
        in: path
        schema:
          "$ref": "#/components/schemas/project"
        required: true
      responses:
        '200':
          description: ok
        '404':
          description: Not Found Project
        '401':
          description: unauthorized
    put:
      summary: Update Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ok
        '404':
          description: not_found
        '422':
          description: Short Title
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
    delete:
      summary: Destroy Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ok
        '404':
          description: not_found
        '401':
          description: unauthorized
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: Create Task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: project_id
        in: path
        required: true
      responses:
        '201':
          description: created
        '404':
          description: Not Found Project
        '422':
          description: Long Task Title
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_task"
  "/api/v1/projects/{project_id}/tasks/{id}":
    get:
      summary: Show Task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: project_id
        in: path
        required: true
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: ok
        '404':
          description: Not Found Task
        '401':
          description: unauthorized
    put:
      summary: Show Task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: project_id
        in: path
        required: true
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: ok
        '422':
          description: Long Title
        '404':
          description: Not Found Task
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task"
    delete:
      summary: Destroy Task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: project_id
        in: path
        required: true
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: ok
        '404':
          description: Not Found Task
        '401':
          description: unauthorized
  "/api/v1/users":
    post:
      summary: Create User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: Not Unique Email
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_user"
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
consumes:
- application/json
components:
  schemas:
    project:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        user:
          "$ref": "#/components/schemas/user"
    new_project:
      type: object
      properties:
        title:
          type: string
        user:
          "$ref": "#/components/schemas/user"
    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
    new_user:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    new_task:
      type: object
      properties:
        title:
          type: string
        deadline:
          type: datetime
          x-nullable: true
        position:
          type: integer
        completed:
          type: boolean
        project:
          "$ref": "#/components/schemas/project"
    task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        deadline:
          type: datetime
          x-nullable: true
        position:
          type: integer
        completed:
          type: boolean
        project:
          "$ref": "#/components/schemas/project"
  new_comment:
    type: object
    properties:
      body:
        type: text
        x-nullable: true
      image_data:
        type: text
        x-nullable: true
      task:
        "$ref": "#/components/schemas/task"
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
