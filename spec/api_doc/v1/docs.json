{
  "openapi": "3.0.0",
  "info": {
    "title": "API ToDo",
    "description": "ToDo list\n",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "login",
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "login": {
                  "summary": "login",
                  "value": "email=example%40example.com&password=password"
                },
                "invalid user": {
                  "summary": "invalid user",
                  "value": "email=example%40example.combad&password=password"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "login": {
                    "summary": "login",
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo2MTMzLCJleHAiOjE2NTMyMjE5ODB9.4rqvshEuZT-3NvH9eatVwlaGohLS4EaV4TDtNrzRHeE",
                      "exp": "05-22-2022 15:19",
                      "username": "example@example.com"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "invalid user": {
                    "summary": "invalid user",
                    "value": {
                      "error": "unauthorized"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "delete": {
        "summary": "logout",
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "logout": {
                    "summary": "logout",
                    "value": {
                      "message": "logout successfully"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "logout non-authorized user": {
                    "summary": "logout non-authorized user",
                    "value": {
                      "errors": "Not authorized"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/{task_id}/comments": {
      "post": {
        "summary": "Create Comment",
        "tags": [
          "Comments"
        ],
        "description": "",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3812"
          },
          {
            "name": "task_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "2257"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "valid params": {
                  "summary": "valid params",
                  "value": "body=Tenetur+nesciunt+eum+nulla+vel+deleniti+aut+cumque+unde."
                },
                "short body": {
                  "summary": "short body",
                  "value": "body=f"
                },
                "long body": {
                  "summary": "long body",
                  "value": "body[]=Esse+voluptates+in+reiciendis+id+quibusdam+praesentium.+Odio+error+ducimus+occaecati+quisquam.+Quo+harum+ad+quam+atque.+Culpa+suscipit+veniam+perspiciatis+porro+dolor+consequatur.+Molestias+unde+alias+aut+voluptatem.&body[]=Facilis+alias+deleniti+velit+id.+Iste+vitae+dolores+pariatur+minima+maiores.+Velit+praesentium+magnam+ratione+fugit+rem.+Cupiditate+aut+rerum+hic+nesciunt+deleniti+fuga+ipsa+amet.+Accusamus+quos+consequuntur+harum+doloribus+earum+tempore+amet+assumenda.&body[]=Provident+occaecati+accusamus+autem+at+perspiciatis+vel+fuga.+Saepe+accusantium+explicabo+odit+vel+asperiores+accusamus+provident.+Dolor+iusto+quo+fuga+dignissimos+perspiciatis+quia."
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "valid params": {
                    "summary": "valid params",
                    "value": {
                      "data": {
                        "id": "2257",
                        "type": "task",
                        "attributes": {
                          "title": "Compatible clear-thinking help-desk",
                          "deadline": null,
                          "position": 1,
                          "completed": false
                        },
                        "relationships": {
                          "project": {
                            "data": {
                              "id": "3812",
                              "type": "project"
                            }
                          },
                          "comments": {
                            "data": [
                              {
                                "id": "518",
                                "type": "comment"
                              }
                            ]
                          }
                        }
                      },
                      "included": [
                        {
                          "id": "518",
                          "type": "comment",
                          "attributes": {
                            "body": "Tenetur nesciunt eum nulla vel deleniti aut cumque unde.",
                            "image": null
                          },
                          "relationships": {
                            "task": {
                              "data": {
                                "id": "2257",
                                "type": "task"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "short body": {
                    "summary": "short body",
                    "value": {
                      "errors": [
                        "Body is too short (minimum is 10 characters)"
                      ]
                    }
                  },
                  "long body": {
                    "summary": "long body",
                    "value": {
                      "errors": [
                        "Body is too short (minimum is 10 characters)"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/{task_id}/comments/{id}": {
      "delete": {
        "summary": "Destroy Comment",
        "tags": [
          "Comments"
        ],
        "description": "",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3815"
          },
          {
            "name": "task_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "2260"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "519"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "summary": "Get Index",
        "tags": [
          "Projects"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "get index": {
                    "summary": "get index",
                    "value": {
                      "data": [

                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Project",
        "tags": [
          "Projects"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "valid params": {
                  "summary": "valid params",
                  "value": "title=lightsteelblue"
                },
                "short title": {
                  "summary": "short title",
                  "value": "title=q"
                },
                "long title": {
                  "summary": "long title",
                  "value": "title=Sapiente+ullam+autem+dolor+iusto+ipsum+modi+nihil.+Harum+earum+quam+doloremque+qui+sapiente+iusto+labore+vero.+Vero+molestiae+nulla+corrupti+aliquam+consectetur+quam+nam+magnam.+Voluptatibus+odit+pariatur+tenetur+sapiente+fuga+explicabo+eveniet+doloribus.+Itaque+quidem+blanditiis+enim+deleniti+repellat."
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "valid params": {
                    "summary": "valid params",
                    "value": {
                      "data": {
                        "id": "3819",
                        "type": "project",
                        "attributes": {
                          "title": "lightsteelblue"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "6146",
                              "type": "user"
                            }
                          },
                          "tasks": {
                            "data": [

                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "short title": {
                    "summary": "short title",
                    "value": {
                      "errors": [
                        "Title is too short (minimum is 3 characters)"
                      ]
                    }
                  },
                  "long title": {
                    "summary": "long title",
                    "value": {
                      "errors": [
                        "Title is too long (maximum is 50 characters)"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "summary": "Show Project",
        "tags": [
          "Projects"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3820"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "existing project": {
                    "summary": "existing project",
                    "value": {
                      "data": {
                        "id": "3820",
                        "type": "project",
                        "attributes": {
                          "title": "hotpink"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "6149",
                              "type": "user"
                            }
                          },
                          "tasks": {
                            "data": [

                            ]
                          }
                        }
                      },
                      "included": [

                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Project",
        "tags": [
          "Projects"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3821"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "valid params": {
                  "summary": "valid params",
                  "value": "title=lightsalmon"
                },
                "short title": {
                  "summary": "short title",
                  "value": "title=q"
                },
                "long title": {
                  "summary": "long title",
                  "value": "title=Magni+ipsa+reiciendis+quisquam+exercitationem+pariatur.+Cum+earum+hic+vitae+quia+maxime+aliquid.+Cumque+nihil+natus+consequatur+hic+fugiat+commodi.+Esse+vero+corrupti+tempora+nobis+pariatur+totam+natus+cumque."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "short title": {
                    "summary": "short title",
                    "value": {
                      "errors": [
                        "Title is too short (minimum is 3 characters)"
                      ]
                    }
                  },
                  "long title": {
                    "summary": "long title",
                    "value": {
                      "errors": [
                        "Title is too long (maximum is 50 characters)"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy Project",
        "tags": [
          "Projects"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3824"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks": {
      "post": {
        "summary": "Create Task",
        "tags": [
          "Tasks"
        ],
        "description": "",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3829"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "valid params": {
                  "summary": "valid params",
                  "value": "title=Extended+web-enabled+help-desk"
                },
                "short title": {
                  "summary": "short title",
                  "value": "title=q"
                },
                "long title": {
                  "summary": "long title",
                  "value": "title=Dolore+accusantium+minima+nostrum+nulla+fugiat+fuga+similique+at.+Expedita+ipsa+dolorum+distinctio+facilis+hic+adipisci.+Magnam+illum+veniam+ipsum+quod+tenetur."
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "valid params": {
                    "summary": "valid params",
                    "value": {
                      "data": {
                        "id": "2267",
                        "type": "task",
                        "attributes": {
                          "title": "Extended web-enabled help-desk",
                          "deadline": null,
                          "position": 1,
                          "completed": false
                        },
                        "relationships": {
                          "project": {
                            "data": {
                              "id": "3829",
                              "type": "project"
                            }
                          },
                          "comments": {
                            "data": [

                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "short title": {
                    "summary": "short title",
                    "value": {
                      "errors": [
                        "Title is too short (minimum is 3 characters)"
                      ]
                    }
                  },
                  "long title": {
                    "summary": "long title",
                    "value": {
                      "errors": [
                        "Title is too long (maximum is 50 characters)"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "non-existent project": {
                    "summary": "non-existent project",
                    "value": {
                      "errors": [

                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/{id}": {
      "get": {
        "summary": "Show Task",
        "tags": [
          "Tasks"
        ],
        "description": "",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3832"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "2268"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "valid": {
                    "summary": "valid",
                    "value": {
                      "data": {
                        "id": "2268",
                        "type": "task",
                        "attributes": {
                          "title": "Assimilated fault-tolerant approach",
                          "deadline": null,
                          "position": 1,
                          "completed": false
                        },
                        "relationships": {
                          "project": {
                            "data": {
                              "id": "3832",
                              "type": "project"
                            }
                          },
                          "comments": {
                            "data": [

                            ]
                          }
                        }
                      },
                      "included": [

                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "tags": [
          "Tasks"
        ],
        "description": "",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3835"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "2270"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "valid": {
                  "summary": "valid",
                  "value": "title=Programmable+grid-enabled+workforce"
                },
                "short title": {
                  "summary": "short title",
                  "value": "title=q"
                },
                "long title": {
                  "summary": "long title",
                  "value": "title=Alias+tempore+asperiores+numquam+laborum+magnam+dolorum+ipsa+corrupti.+Eaque+provident+sed+recusandae+voluptates+minima.+In+fugit+vitae+possimus+architecto.+Qui+veritatis+accusamus+perspiciatis+quod+quas+dolore+architecto."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "short title": {
                    "summary": "short title",
                    "value": {
                      "errors": [
                        "Title is too short (minimum is 3 characters)"
                      ]
                    }
                  },
                  "long title": {
                    "summary": "long title",
                    "value": {
                      "errors": [
                        "Title is too long (maximum is 50 characters)"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "non-existent project": {
                    "summary": "non-existent project",
                    "value": {
                      "errors": [

                      ]
                    }
                  }
                }
              },
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Destroy Task",
        "tags": [
          "Tasks"
        ],
        "description": "",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "3840"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "example": "2274"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/html": {
              }
            },
            "headers": {
              "Content-Type": {
                "description": "text/html"
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/x-www-form-urlencoded"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "create user": {
                  "summary": "create user",
                  "value": "email=examle%40example.com&password=password&password_confirmation=password"
                },
                "email is blank": {
                  "summary": "email is blank",
                  "value": "password=password&password_confirmation=password"
                },
                "email short": {
                  "summary": "email short",
                  "value": "email=e%40&password=password&password_confirmation=password"
                },
                "email long": {
                  "summary": "email long",
                  "value": "email=qqqqqqqqqqqqqqqqqqq%40wwwwwwwwwweeeeeeeeeerrrrrrrrrrtttttttttt&password=password&password_confirmation=password"
                },
                "without confirmation": {
                  "summary": "without confirmation",
                  "value": "email=examle1%40example.com&password=password"
                },
                "not unique mail": {
                  "summary": "not unique mail",
                  "value": "email=examle%40example.com&password=password&password_confirmation=password"
                },
                "without password": {
                  "summary": "without password",
                  "value": "email=examle%40example.com&password_confirmation=password"
                },
                "password length not 8 chars": {
                  "summary": "password length not 8 chars",
                  "value": "email=examle%40example.com&password=pass&password_confirmation=pass"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "create user": {
                    "summary": "create user",
                    "value": {
                      "data": {
                        "id": "6176",
                        "type": "user",
                        "attributes": {
                          "email": "examle@example.com"
                        },
                        "relationships": {
                          "projects": {
                            "data": [

                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "email is blank": {
                    "summary": "email is blank",
                    "value": {
                      "errors": [
                        "Email can't be blank",
                        "Email is too short (minimum is 3 characters)"
                      ]
                    }
                  },
                  "email short": {
                    "summary": "email short",
                    "value": {
                      "errors": [
                        "Email is too short (minimum is 3 characters)"
                      ]
                    }
                  },
                  "email long": {
                    "summary": "email long",
                    "value": {
                      "errors": [
                        "Email is too long (maximum is 50 characters)"
                      ]
                    }
                  },
                  "without confirmation": {
                    "summary": "without confirmation",
                    "value": {
                      "errors": [
                        "Password Password mismatch"
                      ]
                    }
                  },
                  "not unique mail": {
                    "summary": "not unique mail",
                    "value": {
                      "errors": [
                        "Email has already been taken"
                      ]
                    }
                  },
                  "without password": {
                    "summary": "without password",
                    "value": {
                      "errors": [
                        "Password is the wrong length (should be 8 characters)",
                        "Password is invalid",
                        "Password Password mismatch"
                      ]
                    }
                  },
                  "password length not 8 chars": {
                    "summary": "password length not 8 chars",
                    "value": {
                      "errors": [
                        "Password is the wrong length (should be 8 characters)"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": ""
    },
    {
      "name": "Comments",
      "description": ""
    },
    {
      "name": "Projects",
      "description": ""
    },
    {
      "name": "Tasks",
      "description": ""
    },
    {
      "name": "Users",
      "description": ""
    }
  ],
  "x-tagGroups": [
    {
      "name": "Authentication",
      "tags": [
        "Auth"
      ]
    },
    {
      "name": "Comments",
      "tags": [
        "Comments"
      ]
    },
    {
      "name": "Projects",
      "tags": [
        "Projects"
      ]
    },
    {
      "name": "Tasks",
      "tags": [
        "Tasks"
      ]
    },
    {
      "name": "Users",
      "tags": [
        "Users"
      ]
    }
  ]
}
